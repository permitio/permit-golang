/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RoleAssignmentRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleAssignmentRole{}

// RoleAssignmentRole struct for RoleAssignmentRole
type RoleAssignmentRole struct {
	Id  string `json:"id"`
	Key string `json:"key"`
}

// NewRoleAssignmentRole instantiates a new RoleAssignmentRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAssignmentRole(id string, key string) *RoleAssignmentRole {
	this := RoleAssignmentRole{}
	this.Id = id
	this.Key = key
	return &this
}

// NewRoleAssignmentRoleWithDefaults instantiates a new RoleAssignmentRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAssignmentRoleWithDefaults() *RoleAssignmentRole {
	this := RoleAssignmentRole{}
	return &this
}

// GetId returns the Id field value
func (o *RoleAssignmentRole) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentRole) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RoleAssignmentRole) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *RoleAssignmentRole) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentRole) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *RoleAssignmentRole) SetKey(v string) {
	o.Key = v
}

func (o RoleAssignmentRole) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleAssignmentRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	return toSerialize, nil
}

type NullableRoleAssignmentRole struct {
	value *RoleAssignmentRole
	isSet bool
}

func (v NullableRoleAssignmentRole) Get() *RoleAssignmentRole {
	return v.value
}

func (v *NullableRoleAssignmentRole) Set(val *RoleAssignmentRole) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAssignmentRole) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAssignmentRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAssignmentRole(val *RoleAssignmentRole) *NullableRoleAssignmentRole {
	return &NullableRoleAssignmentRole{value: val, isSet: true}
}

func (v NullableRoleAssignmentRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAssignmentRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
