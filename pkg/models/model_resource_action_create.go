/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ResourceActionCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceActionCreate{}

// ResourceActionCreate struct for ResourceActionCreate
type ResourceActionCreate struct {
	// A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.
	Key string `json:"key"`
	// The name of the action
	Name string `json:"name"`
	// An optional longer description of what this action respresents in your system
	Description *string `json:"description,omitempty"`
	// optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix
	Attributes map[string]interface{} `json:"attributes,omitempty"`
}

// NewResourceActionCreate instantiates a new ResourceActionCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceActionCreate(key string, name string) *ResourceActionCreate {
	this := ResourceActionCreate{}
	this.Key = key
	this.Name = name
	return &this
}

// NewResourceActionCreateWithDefaults instantiates a new ResourceActionCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceActionCreateWithDefaults() *ResourceActionCreate {
	this := ResourceActionCreate{}
	return &this
}

// GetKey returns the Key field value
func (o *ResourceActionCreate) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ResourceActionCreate) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ResourceActionCreate) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *ResourceActionCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceActionCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceActionCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceActionCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceActionCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceActionCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceActionCreate) SetDescription(v string) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ResourceActionCreate) GetAttributes() map[string]interface{} {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceActionCreate) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ResourceActionCreate) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *ResourceActionCreate) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o ResourceActionCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceActionCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableResourceActionCreate struct {
	value *ResourceActionCreate
	isSet bool
}

func (v NullableResourceActionCreate) Get() *ResourceActionCreate {
	return v.value
}

func (v *NullableResourceActionCreate) Set(val *ResourceActionCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceActionCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceActionCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceActionCreate(val *ResourceActionCreate) *NullableResourceActionCreate {
	return &NullableResourceActionCreate{value: val, isSet: true}
}

func (v NullableResourceActionCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceActionCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
