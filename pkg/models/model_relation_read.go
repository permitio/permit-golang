/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the RelationRead type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelationRead{}

// RelationRead struct for RelationRead
type RelationRead struct {
	// An optional longer description of what this relation represents in your system
	Description *string `json:"description,omitempty"`
	// The subject resource ID or key
	SubjectResource string `json:"subject_resource"`
	// A URL-friendly name of the relation (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the relation.
	Key string `json:"key"`
	// The name of the relation
	Name string `json:"name"`
	// Unique id of the relation
	Id string `json:"id"`
	// Unique id of the organization that the relation belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the relation belongs to.
	ProjectId string `json:"project_id"`
	// Unique id of the environment that the relation belongs to.
	EnvironmentId string `json:"environment_id"`
	// Date and time when the relation was created (ISO_8601 format).
	CreatedAt time.Time `json:"created_at"`
	// Date and time when the relation was last updated/modified (ISO_8601 format).
	UpdatedAt time.Time `json:"updated_at"`
	// The object resource id
	ObjectResourceId string `json:"object_resource_id"`
	// The object resource key
	ObjectResource string `json:"object_resource"`
	// The subject resource id
	SubjectResourceId string `json:"subject_resource_id"`
}

// NewRelationRead instantiates a new RelationRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelationRead(subjectResource string, key string, name string, id string, organizationId string, projectId string, environmentId string, createdAt time.Time, updatedAt time.Time, objectResourceId string, objectResource string, subjectResourceId string) *RelationRead {
	this := RelationRead{}
	this.SubjectResource = subjectResource
	this.Key = key
	this.Name = name
	this.Id = id
	this.OrganizationId = organizationId
	this.ProjectId = projectId
	this.EnvironmentId = environmentId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.ObjectResourceId = objectResourceId
	this.ObjectResource = objectResource
	this.SubjectResourceId = subjectResourceId
	return &this
}

// NewRelationReadWithDefaults instantiates a new RelationRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelationReadWithDefaults() *RelationRead {
	this := RelationRead{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RelationRead) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationRead) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RelationRead) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RelationRead) SetDescription(v string) {
	o.Description = &v
}

// GetSubjectResource returns the SubjectResource field value
func (o *RelationRead) GetSubjectResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectResource
}

// GetSubjectResourceOk returns a tuple with the SubjectResource field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetSubjectResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectResource, true
}

// SetSubjectResource sets field value
func (o *RelationRead) SetSubjectResource(v string) {
	o.SubjectResource = v
}

// GetKey returns the Key field value
func (o *RelationRead) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *RelationRead) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *RelationRead) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RelationRead) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *RelationRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RelationRead) SetId(v string) {
	o.Id = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *RelationRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *RelationRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value
func (o *RelationRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *RelationRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *RelationRead) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *RelationRead) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *RelationRead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *RelationRead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *RelationRead) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *RelationRead) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetObjectResourceId returns the ObjectResourceId field value
func (o *RelationRead) GetObjectResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectResourceId
}

// GetObjectResourceIdOk returns a tuple with the ObjectResourceId field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetObjectResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectResourceId, true
}

// SetObjectResourceId sets field value
func (o *RelationRead) SetObjectResourceId(v string) {
	o.ObjectResourceId = v
}

// GetObjectResource returns the ObjectResource field value
func (o *RelationRead) GetObjectResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectResource
}

// GetObjectResourceOk returns a tuple with the ObjectResource field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetObjectResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectResource, true
}

// SetObjectResource sets field value
func (o *RelationRead) SetObjectResource(v string) {
	o.ObjectResource = v
}

// GetSubjectResourceId returns the SubjectResourceId field value
func (o *RelationRead) GetSubjectResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectResourceId
}

// GetSubjectResourceIdOk returns a tuple with the SubjectResourceId field value
// and a boolean to check if the value has been set.
func (o *RelationRead) GetSubjectResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectResourceId, true
}

// SetSubjectResourceId sets field value
func (o *RelationRead) SetSubjectResourceId(v string) {
	o.SubjectResourceId = v
}

func (o RelationRead) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelationRead) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["subject_resource"] = o.SubjectResource
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["object_resource_id"] = o.ObjectResourceId
	toSerialize["object_resource"] = o.ObjectResource
	toSerialize["subject_resource_id"] = o.SubjectResourceId
	return toSerialize, nil
}

type NullableRelationRead struct {
	value *RelationRead
	isSet bool
}

func (v NullableRelationRead) Get() *RelationRead {
	return v.value
}

func (v *NullableRelationRead) Set(val *RelationRead) {
	v.value = val
	v.isSet = true
}

func (v NullableRelationRead) IsSet() bool {
	return v.isSet
}

func (v *NullableRelationRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelationRead(val *RelationRead) *NullableRelationRead {
	return &NullableRelationRead{value: val, isSet: true}
}

func (v NullableRelationRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelationRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
