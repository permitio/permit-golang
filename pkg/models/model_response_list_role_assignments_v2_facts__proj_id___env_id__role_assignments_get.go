/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet struct for ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet
type ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet struct {
	RoleAssignmentDetailedRead *[]RoleAssignmentDetailedRead
	RoleAssignmentRead         *[]RoleAssignmentRead
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into []RoleAssignmentDetailedRead
	err = json.Unmarshal(data, &dst.RoleAssignmentDetailedRead)
	if err == nil {
		jsonRoleAssignmentDetailedRead, _ := json.Marshal(dst.RoleAssignmentDetailedRead)
		if string(jsonRoleAssignmentDetailedRead) == "{}" { // empty struct
			dst.RoleAssignmentDetailedRead = nil
		} else {
			return nil // data stored in dst.RoleAssignmentDetailedRead, return on the first match
		}
	} else {
		dst.RoleAssignmentDetailedRead = nil
	}

	// try to unmarshal JSON data into []RoleAssignmentRead
	err = json.Unmarshal(data, &dst.RoleAssignmentRead)
	if err == nil {
		jsonRoleAssignmentRead, _ := json.Marshal(dst.RoleAssignmentRead)
		if string(jsonRoleAssignmentRead) == "{}" { // empty struct
			dst.RoleAssignmentRead = nil
		} else {
			return nil // data stored in dst.RoleAssignmentRead, return on the first match
		}
	} else {
		dst.RoleAssignmentRead = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) MarshalJSON() ([]byte, error) {
	if src.RoleAssignmentDetailedRead != nil {
		return json.Marshal(&src.RoleAssignmentDetailedRead)
	}

	if src.RoleAssignmentRead != nil {
		return json.Marshal(&src.RoleAssignmentRead)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet struct {
	value *ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet
	isSet bool
}

func (v NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) Get() *ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet {
	return v.value
}

func (v *NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) Set(val *ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet(val *ResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) *NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet {
	return &NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet{value: val, isSet: true}
}

func (v NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseListRoleAssignmentsV2FactsProjIdEnvIdRoleAssignmentsGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
