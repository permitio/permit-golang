/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RoleAssignmentTenant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleAssignmentTenant{}

// RoleAssignmentTenant struct for RoleAssignmentTenant
type RoleAssignmentTenant struct {
	Id         string                 `json:"id"`
	Key        string                 `json:"key"`
	Name       string                 `json:"name"`
	Attributes map[string]interface{} `json:"attributes,omitempty"`
}

// NewRoleAssignmentTenant instantiates a new RoleAssignmentTenant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAssignmentTenant(id string, key string, name string) *RoleAssignmentTenant {
	this := RoleAssignmentTenant{}
	this.Id = id
	this.Key = key
	this.Name = name
	return &this
}

// NewRoleAssignmentTenantWithDefaults instantiates a new RoleAssignmentTenant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAssignmentTenantWithDefaults() *RoleAssignmentTenant {
	this := RoleAssignmentTenant{}
	return &this
}

// GetId returns the Id field value
func (o *RoleAssignmentTenant) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentTenant) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RoleAssignmentTenant) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *RoleAssignmentTenant) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentTenant) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *RoleAssignmentTenant) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *RoleAssignmentTenant) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentTenant) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoleAssignmentTenant) SetName(v string) {
	o.Name = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *RoleAssignmentTenant) GetAttributes() map[string]interface{} {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignmentTenant) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *RoleAssignmentTenant) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *RoleAssignmentTenant) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o RoleAssignmentTenant) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleAssignmentTenant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableRoleAssignmentTenant struct {
	value *RoleAssignmentTenant
	isSet bool
}

func (v NullableRoleAssignmentTenant) Get() *RoleAssignmentTenant {
	return v.value
}

func (v *NullableRoleAssignmentTenant) Set(val *RoleAssignmentTenant) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAssignmentTenant) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAssignmentTenant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAssignmentTenant(val *RoleAssignmentTenant) *NullableRoleAssignmentTenant {
	return &NullableRoleAssignmentTenant{value: val, isSet: true}
}

func (v NullableRoleAssignmentTenant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAssignmentTenant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
