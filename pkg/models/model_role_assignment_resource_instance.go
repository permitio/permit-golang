/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RoleAssignmentResourceInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleAssignmentResourceInstance{}

// RoleAssignmentResourceInstance struct for RoleAssignmentResourceInstance
type RoleAssignmentResourceInstance struct {
	Id         string                 `json:"id"`
	Key        string                 `json:"key"`
	Resource   string                 `json:"resource"`
	Attributes map[string]interface{} `json:"attributes,omitempty"`
}

type _RoleAssignmentResourceInstance RoleAssignmentResourceInstance

// NewRoleAssignmentResourceInstance instantiates a new RoleAssignmentResourceInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAssignmentResourceInstance(id string, key string, resource string) *RoleAssignmentResourceInstance {
	this := RoleAssignmentResourceInstance{}
	this.Id = id
	this.Key = key
	this.Resource = resource
	return &this
}

// NewRoleAssignmentResourceInstanceWithDefaults instantiates a new RoleAssignmentResourceInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAssignmentResourceInstanceWithDefaults() *RoleAssignmentResourceInstance {
	this := RoleAssignmentResourceInstance{}
	return &this
}

// GetId returns the Id field value
func (o *RoleAssignmentResourceInstance) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentResourceInstance) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RoleAssignmentResourceInstance) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *RoleAssignmentResourceInstance) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentResourceInstance) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *RoleAssignmentResourceInstance) SetKey(v string) {
	o.Key = v
}

// GetResource returns the Resource field value
func (o *RoleAssignmentResourceInstance) GetResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentResourceInstance) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *RoleAssignmentResourceInstance) SetResource(v string) {
	o.Resource = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *RoleAssignmentResourceInstance) GetAttributes() map[string]interface{} {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleAssignmentResourceInstance) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *RoleAssignmentResourceInstance) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *RoleAssignmentResourceInstance) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o RoleAssignmentResourceInstance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleAssignmentResourceInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	toSerialize["resource"] = o.Resource
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

func (o *RoleAssignmentResourceInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"key",
		"resource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoleAssignmentResourceInstance := _RoleAssignmentResourceInstance{}

	decoder := json.NewDecoder(bytes.NewReader(data))

	err = decoder.Decode(&varRoleAssignmentResourceInstance)

	if err != nil {
		return err
	}

	*o = RoleAssignmentResourceInstance(varRoleAssignmentResourceInstance)

	return err
}

type NullableRoleAssignmentResourceInstance struct {
	value *RoleAssignmentResourceInstance
	isSet bool
}

func (v NullableRoleAssignmentResourceInstance) Get() *RoleAssignmentResourceInstance {
	return v.value
}

func (v *NullableRoleAssignmentResourceInstance) Set(val *RoleAssignmentResourceInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAssignmentResourceInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAssignmentResourceInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAssignmentResourceInstance(val *RoleAssignmentResourceInstance) *NullableRoleAssignmentResourceInstance {
	return &NullableRoleAssignmentResourceInstance{value: val, isSet: true}
}

func (v NullableRoleAssignmentResourceInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAssignmentResourceInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
