/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the DerivedRoleRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DerivedRoleRule{}

// DerivedRoleRule struct for DerivedRoleRule
type DerivedRoleRule struct {
	Relation        string                                               `json:"relation"`
	RelatedResource string                                               `json:"related_resource"`
	RelatedRole     string                                               `json:"related_role"`
	Settings        PermitBackendSchemasSchemaOpalDataDerivationSettings `json:"settings"`
}

// NewDerivedRoleRule instantiates a new DerivedRoleRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDerivedRoleRule(relation string, relatedResource string, relatedRole string, settings PermitBackendSchemasSchemaOpalDataDerivationSettings) *DerivedRoleRule {
	this := DerivedRoleRule{}
	this.Relation = relation
	this.RelatedResource = relatedResource
	this.RelatedRole = relatedRole
	this.Settings = settings
	return &this
}

// NewDerivedRoleRuleWithDefaults instantiates a new DerivedRoleRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDerivedRoleRuleWithDefaults() *DerivedRoleRule {
	this := DerivedRoleRule{}
	return &this
}

// GetRelation returns the Relation field value
func (o *DerivedRoleRule) GetRelation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Relation
}

// GetRelationOk returns a tuple with the Relation field value
// and a boolean to check if the value has been set.
func (o *DerivedRoleRule) GetRelationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relation, true
}

// SetRelation sets field value
func (o *DerivedRoleRule) SetRelation(v string) {
	o.Relation = v
}

// GetRelatedResource returns the RelatedResource field value
func (o *DerivedRoleRule) GetRelatedResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelatedResource
}

// GetRelatedResourceOk returns a tuple with the RelatedResource field value
// and a boolean to check if the value has been set.
func (o *DerivedRoleRule) GetRelatedResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelatedResource, true
}

// SetRelatedResource sets field value
func (o *DerivedRoleRule) SetRelatedResource(v string) {
	o.RelatedResource = v
}

// GetRelatedRole returns the RelatedRole field value
func (o *DerivedRoleRule) GetRelatedRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelatedRole
}

// GetRelatedRoleOk returns a tuple with the RelatedRole field value
// and a boolean to check if the value has been set.
func (o *DerivedRoleRule) GetRelatedRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelatedRole, true
}

// SetRelatedRole sets field value
func (o *DerivedRoleRule) SetRelatedRole(v string) {
	o.RelatedRole = v
}

// GetSettings returns the Settings field value
func (o *DerivedRoleRule) GetSettings() PermitBackendSchemasSchemaOpalDataDerivationSettings {
	if o == nil {
		var ret PermitBackendSchemasSchemaOpalDataDerivationSettings
		return ret
	}

	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value
// and a boolean to check if the value has been set.
func (o *DerivedRoleRule) GetSettingsOk() (*PermitBackendSchemasSchemaOpalDataDerivationSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Settings, true
}

// SetSettings sets field value
func (o *DerivedRoleRule) SetSettings(v PermitBackendSchemasSchemaOpalDataDerivationSettings) {
	o.Settings = v
}

func (o DerivedRoleRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DerivedRoleRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["relation"] = o.Relation
	toSerialize["related_resource"] = o.RelatedResource
	toSerialize["related_role"] = o.RelatedRole
	toSerialize["settings"] = o.Settings
	return toSerialize, nil
}

type NullableDerivedRoleRule struct {
	value *DerivedRoleRule
	isSet bool
}

func (v NullableDerivedRoleRule) Get() *DerivedRoleRule {
	return v.value
}

func (v *NullableDerivedRoleRule) Set(val *DerivedRoleRule) {
	v.value = val
	v.isSet = true
}

func (v NullableDerivedRoleRule) IsSet() bool {
	return v.isSet
}

func (v *NullableDerivedRoleRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDerivedRoleRule(val *DerivedRoleRule) *NullableDerivedRoleRule {
	return &NullableDerivedRoleRule{value: val, isSet: true}
}

func (v NullableDerivedRoleRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDerivedRoleRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
