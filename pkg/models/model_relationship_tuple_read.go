/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the RelationshipTupleRead type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelationshipTupleRead{}

// RelationshipTupleRead struct for RelationshipTupleRead
type RelationshipTupleRead struct {
	// resource_key:resource_instance_key of the subject
	Subject string `json:"subject"`
	// key of the assigned relation
	Relation string `json:"relation"`
	// resource_key:resource_instance_key of the object
	Object string `json:"object"`
	// Unique id of the relationship tuple
	Id string `json:"id"`
	// The tenant the relationship tuple is associated with
	Tenant string `json:"tenant"`
	// Unique id of the subject
	SubjectId string `json:"subject_id"`
	// Unique id of the relation
	RelationId string `json:"relation_id"`
	// Unique id of the object
	ObjectId string `json:"object_id"`
	// Unique id of the tenant
	TenantId string `json:"tenant_id"`
	// Unique id of the organization that the relationship tuple belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the relationship tuple belongs to.
	ProjectId string `json:"project_id"`
	// Unique id of the environment that the relationship tuple belongs to.
	EnvironmentId string `json:"environment_id"`
	// Date and time when the relationship tuple was created (ISO_8601 format).
	CreatedAt time.Time `json:"created_at"`
	// Date and time when the relationship tuple was created (ISO_8601 format).
	UpdatedAt       time.Time                  `json:"updated_at"`
	SubjectDetails  *ResourceInstanceBlockRead `json:"subject_details,omitempty"`
	RelationDetails *StrippedRelationBlockRead `json:"relation_details,omitempty"`
	ObjectDetails   *ResourceInstanceBlockRead `json:"object_details,omitempty"`
	TenantDetails   *TenantBlockRead           `json:"tenant_details,omitempty"`
}

// NewRelationshipTupleRead instantiates a new RelationshipTupleRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelationshipTupleRead(subject string, relation string, object string, id string, tenant string, subjectId string, relationId string, objectId string, tenantId string, organizationId string, projectId string, environmentId string, createdAt time.Time, updatedAt time.Time) *RelationshipTupleRead {
	this := RelationshipTupleRead{}
	this.Subject = subject
	this.Relation = relation
	this.Object = object
	this.Id = id
	this.Tenant = tenant
	this.SubjectId = subjectId
	this.RelationId = relationId
	this.ObjectId = objectId
	this.TenantId = tenantId
	this.OrganizationId = organizationId
	this.ProjectId = projectId
	this.EnvironmentId = environmentId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewRelationshipTupleReadWithDefaults instantiates a new RelationshipTupleRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelationshipTupleReadWithDefaults() *RelationshipTupleRead {
	this := RelationshipTupleRead{}
	return &this
}

// GetSubject returns the Subject field value
func (o *RelationshipTupleRead) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *RelationshipTupleRead) SetSubject(v string) {
	o.Subject = v
}

// GetRelation returns the Relation field value
func (o *RelationshipTupleRead) GetRelation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Relation
}

// GetRelationOk returns a tuple with the Relation field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetRelationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relation, true
}

// SetRelation sets field value
func (o *RelationshipTupleRead) SetRelation(v string) {
	o.Relation = v
}

// GetObject returns the Object field value
func (o *RelationshipTupleRead) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *RelationshipTupleRead) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *RelationshipTupleRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RelationshipTupleRead) SetId(v string) {
	o.Id = v
}

// GetTenant returns the Tenant field value
func (o *RelationshipTupleRead) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *RelationshipTupleRead) SetTenant(v string) {
	o.Tenant = v
}

// GetSubjectId returns the SubjectId field value
func (o *RelationshipTupleRead) GetSubjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetSubjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectId, true
}

// SetSubjectId sets field value
func (o *RelationshipTupleRead) SetSubjectId(v string) {
	o.SubjectId = v
}

// GetRelationId returns the RelationId field value
func (o *RelationshipTupleRead) GetRelationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelationId
}

// GetRelationIdOk returns a tuple with the RelationId field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetRelationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelationId, true
}

// SetRelationId sets field value
func (o *RelationshipTupleRead) SetRelationId(v string) {
	o.RelationId = v
}

// GetObjectId returns the ObjectId field value
func (o *RelationshipTupleRead) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *RelationshipTupleRead) SetObjectId(v string) {
	o.ObjectId = v
}

// GetTenantId returns the TenantId field value
func (o *RelationshipTupleRead) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *RelationshipTupleRead) SetTenantId(v string) {
	o.TenantId = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *RelationshipTupleRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *RelationshipTupleRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value
func (o *RelationshipTupleRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *RelationshipTupleRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *RelationshipTupleRead) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *RelationshipTupleRead) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *RelationshipTupleRead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *RelationshipTupleRead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *RelationshipTupleRead) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *RelationshipTupleRead) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetSubjectDetails returns the SubjectDetails field value if set, zero value otherwise.
func (o *RelationshipTupleRead) GetSubjectDetails() ResourceInstanceBlockRead {
	if o == nil || IsNil(o.SubjectDetails) {
		var ret ResourceInstanceBlockRead
		return ret
	}
	return *o.SubjectDetails
}

// GetSubjectDetailsOk returns a tuple with the SubjectDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetSubjectDetailsOk() (*ResourceInstanceBlockRead, bool) {
	if o == nil || IsNil(o.SubjectDetails) {
		return nil, false
	}
	return o.SubjectDetails, true
}

// HasSubjectDetails returns a boolean if a field has been set.
func (o *RelationshipTupleRead) HasSubjectDetails() bool {
	if o != nil && !IsNil(o.SubjectDetails) {
		return true
	}

	return false
}

// SetSubjectDetails gets a reference to the given ResourceInstanceBlockRead and assigns it to the SubjectDetails field.
func (o *RelationshipTupleRead) SetSubjectDetails(v ResourceInstanceBlockRead) {
	o.SubjectDetails = &v
}

// GetRelationDetails returns the RelationDetails field value if set, zero value otherwise.
func (o *RelationshipTupleRead) GetRelationDetails() StrippedRelationBlockRead {
	if o == nil || IsNil(o.RelationDetails) {
		var ret StrippedRelationBlockRead
		return ret
	}
	return *o.RelationDetails
}

// GetRelationDetailsOk returns a tuple with the RelationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetRelationDetailsOk() (*StrippedRelationBlockRead, bool) {
	if o == nil || IsNil(o.RelationDetails) {
		return nil, false
	}
	return o.RelationDetails, true
}

// HasRelationDetails returns a boolean if a field has been set.
func (o *RelationshipTupleRead) HasRelationDetails() bool {
	if o != nil && !IsNil(o.RelationDetails) {
		return true
	}

	return false
}

// SetRelationDetails gets a reference to the given StrippedRelationBlockRead and assigns it to the RelationDetails field.
func (o *RelationshipTupleRead) SetRelationDetails(v StrippedRelationBlockRead) {
	o.RelationDetails = &v
}

// GetObjectDetails returns the ObjectDetails field value if set, zero value otherwise.
func (o *RelationshipTupleRead) GetObjectDetails() ResourceInstanceBlockRead {
	if o == nil || IsNil(o.ObjectDetails) {
		var ret ResourceInstanceBlockRead
		return ret
	}
	return *o.ObjectDetails
}

// GetObjectDetailsOk returns a tuple with the ObjectDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetObjectDetailsOk() (*ResourceInstanceBlockRead, bool) {
	if o == nil || IsNil(o.ObjectDetails) {
		return nil, false
	}
	return o.ObjectDetails, true
}

// HasObjectDetails returns a boolean if a field has been set.
func (o *RelationshipTupleRead) HasObjectDetails() bool {
	if o != nil && !IsNil(o.ObjectDetails) {
		return true
	}

	return false
}

// SetObjectDetails gets a reference to the given ResourceInstanceBlockRead and assigns it to the ObjectDetails field.
func (o *RelationshipTupleRead) SetObjectDetails(v ResourceInstanceBlockRead) {
	o.ObjectDetails = &v
}

// GetTenantDetails returns the TenantDetails field value if set, zero value otherwise.
func (o *RelationshipTupleRead) GetTenantDetails() TenantBlockRead {
	if o == nil || IsNil(o.TenantDetails) {
		var ret TenantBlockRead
		return ret
	}
	return *o.TenantDetails
}

// GetTenantDetailsOk returns a tuple with the TenantDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipTupleRead) GetTenantDetailsOk() (*TenantBlockRead, bool) {
	if o == nil || IsNil(o.TenantDetails) {
		return nil, false
	}
	return o.TenantDetails, true
}

// HasTenantDetails returns a boolean if a field has been set.
func (o *RelationshipTupleRead) HasTenantDetails() bool {
	if o != nil && !IsNil(o.TenantDetails) {
		return true
	}

	return false
}

// SetTenantDetails gets a reference to the given TenantBlockRead and assigns it to the TenantDetails field.
func (o *RelationshipTupleRead) SetTenantDetails(v TenantBlockRead) {
	o.TenantDetails = &v
}

func (o RelationshipTupleRead) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelationshipTupleRead) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subject"] = o.Subject
	toSerialize["relation"] = o.Relation
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["tenant"] = o.Tenant
	toSerialize["subject_id"] = o.SubjectId
	toSerialize["relation_id"] = o.RelationId
	toSerialize["object_id"] = o.ObjectId
	toSerialize["tenant_id"] = o.TenantId
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.SubjectDetails) {
		toSerialize["subject_details"] = o.SubjectDetails
	}
	if !IsNil(o.RelationDetails) {
		toSerialize["relation_details"] = o.RelationDetails
	}
	if !IsNil(o.ObjectDetails) {
		toSerialize["object_details"] = o.ObjectDetails
	}
	if !IsNil(o.TenantDetails) {
		toSerialize["tenant_details"] = o.TenantDetails
	}
	return toSerialize, nil
}

type NullableRelationshipTupleRead struct {
	value *RelationshipTupleRead
	isSet bool
}

func (v NullableRelationshipTupleRead) Get() *RelationshipTupleRead {
	return v.value
}

func (v *NullableRelationshipTupleRead) Set(val *RelationshipTupleRead) {
	v.value = val
	v.isSet = true
}

func (v NullableRelationshipTupleRead) IsSet() bool {
	return v.isSet
}

func (v *NullableRelationshipTupleRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelationshipTupleRead(val *RelationshipTupleRead) *NullableRelationshipTupleRead {
	return &NullableRelationshipTupleRead{value: val, isSet: true}
}

func (v NullableRelationshipTupleRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelationshipTupleRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
