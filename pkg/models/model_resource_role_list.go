/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ResourceRoleList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceRoleList{}

// ResourceRoleList struct for ResourceRoleList
type ResourceRoleList struct {
	Roles Roles `json:"roles"`
}

// NewResourceRoleList instantiates a new ResourceRoleList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRoleList(roles Roles) *ResourceRoleList {
	this := ResourceRoleList{}
	this.Roles = roles
	return &this
}

// NewResourceRoleListWithDefaults instantiates a new ResourceRoleList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRoleListWithDefaults() *ResourceRoleList {
	this := ResourceRoleList{}
	return &this
}

// GetRoles returns the Roles field value
func (o *ResourceRoleList) GetRoles() Roles {
	if o == nil {
		var ret Roles
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleList) GetRolesOk() (*Roles, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Roles, true
}

// SetRoles sets field value
func (o *ResourceRoleList) SetRoles(v Roles) {
	o.Roles = v
}

func (o ResourceRoleList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceRoleList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roles"] = o.Roles
	return toSerialize, nil
}

type NullableResourceRoleList struct {
	value *ResourceRoleList
	isSet bool
}

func (v NullableResourceRoleList) Get() *ResourceRoleList {
	return v.value
}

func (v *NullableResourceRoleList) Set(val *ResourceRoleList) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRoleList) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRoleList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRoleList(val *ResourceRoleList) *NullableResourceRoleList {
	return &NullableResourceRoleList{value: val, isSet: true}
}

func (v NullableResourceRoleList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRoleList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
