/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// ResourceRoleRead struct for ResourceRoleRead
type ResourceRoleRead struct {
	// The name of the role
	Name string `json:"name"`
	// optional description string explaining what this role represents, or what permissions are granted to it.
	Description *string `json:"description,omitempty"`
	// list of action keys that define what actions this resource role is permitted to do
	Permissions []string `json:"permissions,omitempty"`
	// list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.
	Extends   []string              `json:"extends,omitempty"`
	GrantedTo *DerivedRoleBlockRead `json:"granted_to,omitempty"`
	// A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.
	Key string `json:"key"`
	// Unique id of the role
	Id string `json:"id"`
	// Unique id of the organization that the role belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the role belongs to.
	ProjectId string `json:"project_id"`
	// Unique id of the environment that the role belongs to.
	EnvironmentId string `json:"environment_id"`
	// Unique id of the resource that the role belongs to.
	ResourceId string `json:"resource_id"`
	// Date and time when the role was created (ISO_8601 format).
	CreatedAt time.Time `json:"created_at"`
	// Date and time when the role was last updated/modified (ISO_8601 format).
	UpdatedAt time.Time `json:"updated_at"`
}

// NewResourceRoleRead instantiates a new ResourceRoleRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRoleRead(name string, key string, id string, organizationId string, projectId string, environmentId string, resourceId string, createdAt time.Time, updatedAt time.Time) *ResourceRoleRead {
	this := ResourceRoleRead{}
	this.Name = name
	this.Key = key
	this.Id = id
	this.OrganizationId = organizationId
	this.ProjectId = projectId
	this.EnvironmentId = environmentId
	this.ResourceId = resourceId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewResourceRoleReadWithDefaults instantiates a new ResourceRoleRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRoleReadWithDefaults() *ResourceRoleRead {
	this := ResourceRoleRead{}
	return &this
}

// GetName returns the Name field value
func (o *ResourceRoleRead) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceRoleRead) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceRoleRead) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceRoleRead) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceRoleRead) SetDescription(v string) {
	o.Description = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ResourceRoleRead) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ResourceRoleRead) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *ResourceRoleRead) SetPermissions(v []string) {
	o.Permissions = v
}

// GetExtends returns the Extends field value if set, zero value otherwise.
func (o *ResourceRoleRead) GetExtends() []string {
	if o == nil || IsNil(o.Extends) {
		var ret []string
		return ret
	}
	return o.Extends
}

// GetExtendsOk returns a tuple with the Extends field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetExtendsOk() ([]string, bool) {
	if o == nil || IsNil(o.Extends) {
		return nil, false
	}
	return o.Extends, true
}

// HasExtends returns a boolean if a field has been set.
func (o *ResourceRoleRead) HasExtends() bool {
	if o != nil && !IsNil(o.Extends) {
		return true
	}

	return false
}

// SetExtends gets a reference to the given []string and assigns it to the Extends field.
func (o *ResourceRoleRead) SetExtends(v []string) {
	o.Extends = v
}

// GetKey returns the Key field value
func (o *ResourceRoleRead) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ResourceRoleRead) SetKey(v string) {
	o.Key = v
}

// GetId returns the Id field value
func (o *ResourceRoleRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResourceRoleRead) SetId(v string) {
	o.Id = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ResourceRoleRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ResourceRoleRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value
func (o *ResourceRoleRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ResourceRoleRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ResourceRoleRead) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ResourceRoleRead) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetResourceId returns the ResourceId field value
func (o *ResourceRoleRead) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ResourceRoleRead) SetResourceId(v string) {
	o.ResourceId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ResourceRoleRead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ResourceRoleRead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ResourceRoleRead) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ResourceRoleRead) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ResourceRoleRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Extends) {
		toSerialize["extends"] = o.Extends
	}
	if !IsNil(o.GrantedTo) {
		toSerialize["granted_to"] = o.GrantedTo
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if true {
		toSerialize["project_id"] = o.ProjectId
	}
	if true {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if true {
		toSerialize["resource_id"] = o.ResourceId
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableResourceRoleRead struct {
	value *ResourceRoleRead
	isSet bool
}

func (v NullableResourceRoleRead) Get() *ResourceRoleRead {
	return v.value
}

func (v *NullableResourceRoleRead) Set(val *ResourceRoleRead) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRoleRead) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRoleRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRoleRead(val *ResourceRoleRead) *NullableResourceRoleRead {
	return &NullableResourceRoleRead{value: val, isSet: true}
}

func (v NullableResourceRoleRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRoleRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

// GetGrantedTo returns the GrantedTo field value if set, zero value otherwise.
func (o *ResourceRoleRead) GetGrantedTo() DerivedRoleBlockRead {
	if o == nil || IsNil(o.GrantedTo) {
		var ret DerivedRoleBlockRead
		return ret
	}
	return *o.GrantedTo
}

// GetGrantedToOk returns a tuple with the GrantedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRoleRead) GetGrantedToOk() (*DerivedRoleBlockRead, bool) {
	if o == nil || IsNil(o.GrantedTo) {
		return nil, false
	}
	return o.GrantedTo, true
}

// HasGrantedTo returns a boolean if a field has been set.
func (o *ResourceRoleRead) HasGrantedTo() bool {
	if o != nil && !IsNil(o.GrantedTo) {
		return true
	}

	return false
}

// SetGrantedTo gets a reference to the given DerivedRoleBlockRead and assigns it to the GrantedTo field.
func (o *ResourceRoleRead) SetGrantedTo(v DerivedRoleBlockRead) {
	o.GrantedTo = &v
}
