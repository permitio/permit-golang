/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the ResourceActionRead type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceActionRead{}

// ResourceActionRead struct for ResourceActionRead
type ResourceActionRead struct {
	// The name of the action
	Name string `json:"name"`
	// An optional longer description of what this action respresents in your system
	Description *string `json:"description,omitempty"`
	// optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	// A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.
	Key string `json:"key"`
	// Unique id of the action
	Id string `json:"id"`
	// The name of the action, prefixed by the resource the action is acting upon.
	PermissionName string `json:"permission_name"`
	// Unique id of the organization that the action belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the action belongs to.
	ProjectId string `json:"project_id"`
	// Unique id of the environment that the action belongs to.
	EnvironmentId string `json:"environment_id"`
	// Unique id of the resource that the action belongs to.
	ResourceId string `json:"resource_id"`
	// Date and time when the action was created (ISO_8601 format).
	CreatedAt time.Time `json:"created_at"`
	// Date and time when the action was last updated/modified (ISO_8601 format).
	UpdatedAt time.Time `json:"updated_at"`
}

// NewResourceActionRead instantiates a new ResourceActionRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceActionRead(name string, key string, id string, permissionName string, organizationId string, projectId string, environmentId string, resourceId string, createdAt time.Time, updatedAt time.Time) *ResourceActionRead {
	this := ResourceActionRead{}
	this.Name = name
	this.Key = key
	this.Id = id
	this.PermissionName = permissionName
	this.OrganizationId = organizationId
	this.ProjectId = projectId
	this.EnvironmentId = environmentId
	this.ResourceId = resourceId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewResourceActionReadWithDefaults instantiates a new ResourceActionRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceActionReadWithDefaults() *ResourceActionRead {
	this := ResourceActionRead{}
	return &this
}

// GetName returns the Name field value
func (o *ResourceActionRead) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceActionRead) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceActionRead) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceActionRead) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceActionRead) SetDescription(v string) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ResourceActionRead) GetAttributes() map[string]interface{} {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ResourceActionRead) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *ResourceActionRead) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetKey returns the Key field value
func (o *ResourceActionRead) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ResourceActionRead) SetKey(v string) {
	o.Key = v
}

// GetId returns the Id field value
func (o *ResourceActionRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResourceActionRead) SetId(v string) {
	o.Id = v
}

// GetPermissionName returns the PermissionName field value
func (o *ResourceActionRead) GetPermissionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PermissionName
}

// GetPermissionNameOk returns a tuple with the PermissionName field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetPermissionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PermissionName, true
}

// SetPermissionName sets field value
func (o *ResourceActionRead) SetPermissionName(v string) {
	o.PermissionName = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ResourceActionRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ResourceActionRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value
func (o *ResourceActionRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ResourceActionRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ResourceActionRead) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ResourceActionRead) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetResourceId returns the ResourceId field value
func (o *ResourceActionRead) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ResourceActionRead) SetResourceId(v string) {
	o.ResourceId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ResourceActionRead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ResourceActionRead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ResourceActionRead) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceActionRead) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ResourceActionRead) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ResourceActionRead) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceActionRead) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	toSerialize["key"] = o.Key
	toSerialize["id"] = o.Id
	toSerialize["permission_name"] = o.PermissionName
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["project_id"] = o.ProjectId
	toSerialize["environment_id"] = o.EnvironmentId
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableResourceActionRead struct {
	value *ResourceActionRead
	isSet bool
}

func (v NullableResourceActionRead) Get() *ResourceActionRead {
	return v.value
}

func (v *NullableResourceActionRead) Set(val *ResourceActionRead) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceActionRead) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceActionRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceActionRead(val *ResourceActionRead) *NullableResourceActionRead {
	return &NullableResourceActionRead{value: val, isSet: true}
}

func (v NullableResourceActionRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceActionRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
