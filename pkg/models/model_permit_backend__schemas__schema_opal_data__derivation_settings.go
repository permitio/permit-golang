/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the PermitBackendSchemasSchemaOpalDataDerivationSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermitBackendSchemasSchemaOpalDataDerivationSettings{}

// PermitBackendSchemasSchemaOpalDataDerivationSettings struct for PermitBackendSchemasSchemaOpalDataDerivationSettings
type PermitBackendSchemasSchemaOpalDataDerivationSettings struct {
	SupersededByDirectRole *bool `json:"superseded_by_direct_role,omitempty"`
}

// NewPermitBackendSchemasSchemaOpalDataDerivationSettings instantiates a new PermitBackendSchemasSchemaOpalDataDerivationSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermitBackendSchemasSchemaOpalDataDerivationSettings() *PermitBackendSchemasSchemaOpalDataDerivationSettings {
	this := PermitBackendSchemasSchemaOpalDataDerivationSettings{}
	var supersededByDirectRole bool = false
	this.SupersededByDirectRole = &supersededByDirectRole
	return &this
}

// NewPermitBackendSchemasSchemaOpalDataDerivationSettingsWithDefaults instantiates a new PermitBackendSchemasSchemaOpalDataDerivationSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermitBackendSchemasSchemaOpalDataDerivationSettingsWithDefaults() *PermitBackendSchemasSchemaOpalDataDerivationSettings {
	this := PermitBackendSchemasSchemaOpalDataDerivationSettings{}
	var supersededByDirectRole bool = false
	this.SupersededByDirectRole = &supersededByDirectRole
	return &this
}

// GetSupersededByDirectRole returns the SupersededByDirectRole field value if set, zero value otherwise.
func (o *PermitBackendSchemasSchemaOpalDataDerivationSettings) GetSupersededByDirectRole() bool {
	if o == nil || IsNil(o.SupersededByDirectRole) {
		var ret bool
		return ret
	}
	return *o.SupersededByDirectRole
}

// GetSupersededByDirectRoleOk returns a tuple with the SupersededByDirectRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermitBackendSchemasSchemaOpalDataDerivationSettings) GetSupersededByDirectRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.SupersededByDirectRole) {
		return nil, false
	}
	return o.SupersededByDirectRole, true
}

// HasSupersededByDirectRole returns a boolean if a field has been set.
func (o *PermitBackendSchemasSchemaOpalDataDerivationSettings) HasSupersededByDirectRole() bool {
	if o != nil && !IsNil(o.SupersededByDirectRole) {
		return true
	}

	return false
}

// SetSupersededByDirectRole gets a reference to the given bool and assigns it to the SupersededByDirectRole field.
func (o *PermitBackendSchemasSchemaOpalDataDerivationSettings) SetSupersededByDirectRole(v bool) {
	o.SupersededByDirectRole = &v
}

func (o PermitBackendSchemasSchemaOpalDataDerivationSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermitBackendSchemasSchemaOpalDataDerivationSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupersededByDirectRole) {
		toSerialize["superseded_by_direct_role"] = o.SupersededByDirectRole
	}
	return toSerialize, nil
}

type NullablePermitBackendSchemasSchemaOpalDataDerivationSettings struct {
	value *PermitBackendSchemasSchemaOpalDataDerivationSettings
	isSet bool
}

func (v NullablePermitBackendSchemasSchemaOpalDataDerivationSettings) Get() *PermitBackendSchemasSchemaOpalDataDerivationSettings {
	return v.value
}

func (v *NullablePermitBackendSchemasSchemaOpalDataDerivationSettings) Set(val *PermitBackendSchemasSchemaOpalDataDerivationSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePermitBackendSchemasSchemaOpalDataDerivationSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePermitBackendSchemasSchemaOpalDataDerivationSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermitBackendSchemasSchemaOpalDataDerivationSettings(val *PermitBackendSchemasSchemaOpalDataDerivationSettings) *NullablePermitBackendSchemasSchemaOpalDataDerivationSettings {
	return &NullablePermitBackendSchemasSchemaOpalDataDerivationSettings{value: val, isSet: true}
}

func (v NullablePermitBackendSchemasSchemaOpalDataDerivationSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermitBackendSchemasSchemaOpalDataDerivationSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
